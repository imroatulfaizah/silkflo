@{
    ViewBag.Title = "Custom Form Designer";
}

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">

<h2>Custom Form Designer</h2>
@ViewBag.Id
<div class="container">
    <div class="row">
        <div class="col-md-4">
            <div id="toolbox">
                <div class="draggable btn btn-primary mb-3" data-type="text">Text Input</div>
                <div class="draggable btn btn-primary mb-3" data-type="password">Password Input</div>
                <div class="draggable btn btn-primary mb-3" data-type="button">Button</div>
                <div class="draggable btn btn-primary mb-3" data-type="select">Select</div>
                <div class="draggable btn btn-primary mb-3" data-type="radio">Radio Button</div>
                <div class="draggable btn btn-primary mb-3" data-type="checkbox">Checkbox</div>
                <div class="draggable btn btn-primary mb-3" data-type="textarea">Text Area</div>
            </div>
        </div>
        <div class="col-md-8">
            <form id="formBuilder" class="border p-3">
                <!-- Form elements will be dropped here -->
            </form>
        </div>
    </div>
</div>

<div id="labelModal" class="modal" tabindex="-1" role="dialog" style="display: none;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Label and Placeholder</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="labelText">Label Text:</label>
                    <input type="text" id="labelText" class="form-control" required />
                </div>
                <div class="form-group">
                    <label for="placeholderText">Placeholder Text:</label>
                    <input type="text" id="placeholderText" class="form-control" required />
                </div>
                <div class="form-group" id="optionsGroup" style="display: none;">
                    <label for="optionsText">Options (comma separated):</label>
                    <input type="text" id="optionsText" class="form-control" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveLabel">Save</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script>
        var formBuilderId = '@ViewBag.Id';
        $(function () {
            $(".draggable").draggable({
                helper: "clone"
            });

            $("#formBuilder").droppable({
                accept: ".draggable",
                drop: function (event, ui) {
                    var type = ui.helper.data("type");
                    var newElement;

                    switch (type) {
                        case "button":
                            newElement = $("<button>").addClass("btn btn-primary");
                            break;
                        case "select":
                            newElement = $("<select>").addClass("form-control");
                            break;
                        case "radio":
                        case "checkbox":
                            newElement = $("<div>").addClass("form-check");
                            break;
                        case "textarea":
                            newElement = $("<textarea>").addClass("form-control");
                            break;
                        default:
                            newElement = $("<input>").attr("type", type).addClass("form-control");
                            break;
                    }

                    var label = $("<label>").addClass("form-label");

                    if (type === "select" || type === "radio" || type === "checkbox") {
                        $("#optionsGroup").show();
                    } else {
                        $("#optionsGroup").hide();
                    }

                    $("#labelModal").modal('show');

                    $("#saveLabel").off('click').click(function () {
                        var labelText = $("#labelText").val();
                        var placeholderText = $("#placeholderText").val();
                        var optionsText = $("#optionsText").val();
                        if (labelText && placeholderText) {
                            if (type !== "button") {
                                label.text(labelText);
                            }
                            if (type === "button") {
                                newElement.text(placeholderText);
                            } else {
                                newElement.attr("placeholder", placeholderText);
                            }
                            if ((type === "select" || type === "radio" || type === "checkbox") && optionsText) {
                                var options = optionsText.split(",");
                                options.forEach(function (option) {
                                    if (type === "select") {
                                        newElement.append($("<option>").text(option));
                                    } else {
                                        var optionElement = $("<input>").attr("type", type).addClass("form-check-input");
                                        var optionLabel = $("<label>").addClass("form-check-label").text(option);
                                        var optionDiv = $("<div>").addClass("form-check").append(optionElement).append(optionLabel);
                                        newElement.append(optionDiv);
                                    }
                                });
                            }
                            $("#labelModal").modal('hide');
                        }
                    });

                    $("#labelModal").on('hidden.bs.modal', function () {
                        $("#labelText").val("");
                        $("#placeholderText").val("");
                        $("#optionsText").val("");
                        var fieldWrapper = $("<div>").addClass("form-group");
                        if (type !== "button") {
                            fieldWrapper.append(label);
                        }
                        fieldWrapper.append(newElement);
                        $("#formBuilder").append(fieldWrapper);

                        var elementData = {
                            type: type,
                            labelText: label.text(),
                            placeholderText: newElement.attr("placeholder"),
                            optionsText: $("#optionsText").val(),
                            IdFormBuilder: formBuilderId
                        };
                        console.log(elementData);

                        // Send the elementData to the PostElement API
                        $.ajax({
                            url: '/Home/PostElement',  // Update this URL to the correct endpoint
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify(elementData),
                            success: function (response) {
                                console.log(response);
                            },
                            error: function (error) {
                                console.log(error);
                            }
                        });
                    });
                }
            });
        });
    </script>
}